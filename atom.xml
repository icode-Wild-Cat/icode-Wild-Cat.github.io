<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DodgeWildCat&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-06T02:57:42.433Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JWT解读与使用</title>
    <link href="http://example.com/2023/03/05/JWT/"/>
    <id>http://example.com/2023/03/05/JWT/</id>
    <published>2023-03-05T13:34:46.347Z</published>
    <updated>2023-03-06T02:57:42.433Z</updated>
    
    <content type="html"><![CDATA[<p>JWT（JSON web Token）目前最流行的跨域身份验证解决方案</p><ul><li>流行</li><li>安全</li><li>稳定</li><li>易用</li><li>支持JSON</li></ul><span id="more"></span><h2 id="跨域身份验证"><a href="#跨域身份验证" class="headerlink" title="跨域身份验证"></a>跨域身份验证</h2><p>Internet服务无法与用户身份验证分开。</p><p>一般的：</p><ol><li>用户向服务器发送用户名和密码</li><li>验证服务器后，相关数据（如用户角色，登录时间等）将保存在当前会话中</li></ol><h2 id="JWT的原则"><a href="#JWT的原则" class="headerlink" title="JWT的原则"></a>JWT的原则</h2><p>原则：在服务器身份验证之后，将生成一个JSON对象并将其发送回用户</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;zhangsan&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Role&quot;</span><span class="punctuation">:</span><span class="string">&quot;Admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Expire&quot;</span><span class="punctuation">:</span><span class="string">&quot;2023-3-5 22:04:28&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>之后，当用户与浏览器通信时，客户在请求中发回JSON对象。服务器仅依赖于这个JSON对象来标记用户。为了防止用户篡改数据，服务器将在生成对象时添加签名。</p><p>服务器不保存任何会话数据，即服务器变为无状态，使其更容易扩展。</p><h2 id="JWT的数据结构"><a href="#JWT的数据结构" class="headerlink" title="JWT的数据结构"></a>JWT的数据结构</h2><p>典型的：改对象为一个很长的字符串，字符之间通过 “ . ”分割为三个子串。</p><p>注意：JWT对象为一个长字串，各子串之间也没有换行符。</p><p>每一个子串表示一个功能块：JWT头、有效载荷、签名 </p><p><img src="/images/30174043_63d7909b0ca6171543.webp" alt="30174043_63d7909b0ca6171543"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;JWT（JSON web Token）目前最流行的跨域身份验证解决方案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流行&lt;/li&gt;
&lt;li&gt;安全&lt;/li&gt;
&lt;li&gt;稳定&lt;/li&gt;
&lt;li&gt;易用&lt;/li&gt;
&lt;li&gt;支持JSON&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="JWT" scheme="http://example.com/tags/JWT/"/>
    
  </entry>
  
</feed>
